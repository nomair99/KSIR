<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="./styles/room.css" type="text/css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Room - <%= room.name %></title>
</head>
<body>
    <a href="/rooms">Back</a><br>
    <h1><%= room.name %></h1>
    <ul id="playerlist"></ul>
    <!-- <ul>
        <% 
            for(let i = 0; i < room.users.length; i++) {
                let user = users.search(room.users[i]);
                if(user) {
        %>
        <li><%= user.obj.username %></li>
        <%
                }
            } 
        %>
    </ul> -->
    <%
        if(currentUser.sessionID === room.host) {
    %>
    <button id="start-btn">Start Game</button>
    <%
        }
    %>
    <br>
    <div id="chat"></div>
    <br>
    <form id="chat-form">
        <input type="text" name="chat-text" id="chat-text"> <input type="submit" value="Send" id="chat-send">
    </form>
    <script src="https://cdn.jsdelivr.net/npm/socket.io-client@2/dist/socket.io.js"></script>
    <script>
        var playerList = [];
        var socket = io('/lobby');

        socket.on('player list', function(data) {
            playerList = data;
            updatePlayerList();
        });

        socket.on('player joined', function(data) {
            playerList.push(data);
            updatePlayerList();
        });

        socket.on('host left', function(data) {
            window.location = "<%= baseUrl %>/rooms?err=hostleft";
        });

        socket.on('player left', function(data) {
            let index = playerList.indexOf(data);
            playerList.splice(index, 1);
            updatePlayerList();
        });

        socket.on('start game', function(data) {
            window.location = "<%= baseUrl %>/room/<%= room.id %>/game";
        });

        socket.on('message', function(msg) {
            // new chat message received. display it

            let chat = document.querySelector('#chat');
            let messageText = document.createTextNode(msg);
            chat.appendChild(messageText);
            chat.appendChild(document.createElement('br'));
        });

        document.querySelector('#start-btn').addEventListener('click', function(e) {
            socket.emit('start request', null);
        });

        document.querySelector('#chat-form').addEventListener('submit', function(e) {
            e.preventDefault();
            let msg = document.querySelector('#chat-text').value.trim();
            if(msg !== "") {
                socket.emit('message', msg);
            }
        });

        function updatePlayerList() {
            let list = document.getElementById('playerlist');
            
            while(list.firstChild) {
                list.removeChild(list.firstChild);
            }

            for(let i = 0; i < playerList.length; i++) {
                let player = document.createElement('li');
                player.innerHTML = playerList[i];
                list.appendChild(player);
            }
        }
    </script>
</body>
</html>